// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "manawave-gamehost.proto" (syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FullGameFamilyDrawResults } from "./manawave";
import { GameInitLeylineDrawResults } from "./manawave";
/**
 * @generated from protobuf message ProxyConfigPb
 */
export interface ProxyConfigPb {
    /**
     * @generated from protobuf field: ProxyConfigSourceType sourceType = 1;
     */
    sourceType: ProxyConfigSourceType;
    /**
     * @generated from protobuf field: string sourceConfig = 2;
     */
    sourceConfig: string;
}
/**
 * put secret information here
 *
 * @generated from protobuf message GameHostDataPb
 */
export interface GameHostDataPb {
    /**
     * @generated from protobuf field: GameInitLeylineDrawResults leylineDrawResults = 1;
     */
    leylineDrawResults?: GameInitLeylineDrawResults;
    /**
     * @generated from protobuf field: FullGameFamilyDrawResults familyDrawResults = 2;
     */
    familyDrawResults?: FullGameFamilyDrawResults;
}
/**
 * @generated from protobuf enum ProxyConfigSourceType
 */
export enum ProxyConfigSourceType {
    /**
     * @generated from protobuf enum value: ProxyConfigSourceType_NotSet = 0;
     */
    ProxyConfigSourceType_NotSet = 0,
    /**
     * @generated from protobuf enum value: ProxyConfigSourceType_GameStateRandomSeed = 1;
     */
    ProxyConfigSourceType_GameStateRandomSeed = 1,
    /**
     * @generated from protobuf enum value: ProxyConfigSourceType_QueryParameterDefined = 2;
     */
    ProxyConfigSourceType_QueryParameterDefined = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class ProxyConfigPb$Type extends MessageType<ProxyConfigPb> {
    constructor() {
        super("ProxyConfigPb", [
            { no: 1, name: "sourceType", kind: "enum", T: () => ["ProxyConfigSourceType", ProxyConfigSourceType] },
            { no: 2, name: "sourceConfig", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ProxyConfigPb>): ProxyConfigPb {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.sourceType = 0;
        message.sourceConfig = "";
        if (value !== undefined)
            reflectionMergePartial<ProxyConfigPb>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProxyConfigPb): ProxyConfigPb {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ProxyConfigSourceType sourceType */ 1:
                    message.sourceType = reader.int32();
                    break;
                case /* string sourceConfig */ 2:
                    message.sourceConfig = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProxyConfigPb, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ProxyConfigSourceType sourceType = 1; */
        if (message.sourceType !== 0)
            writer.tag(1, WireType.Varint).int32(message.sourceType);
        /* string sourceConfig = 2; */
        if (message.sourceConfig !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.sourceConfig);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ProxyConfigPb
 */
export const ProxyConfigPb = new ProxyConfigPb$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GameHostDataPb$Type extends MessageType<GameHostDataPb> {
    constructor() {
        super("GameHostDataPb", [
            { no: 1, name: "leylineDrawResults", kind: "message", T: () => GameInitLeylineDrawResults },
            { no: 2, name: "familyDrawResults", kind: "message", T: () => FullGameFamilyDrawResults }
        ]);
    }
    create(value?: PartialMessage<GameHostDataPb>): GameHostDataPb {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<GameHostDataPb>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GameHostDataPb): GameHostDataPb {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* GameInitLeylineDrawResults leylineDrawResults */ 1:
                    message.leylineDrawResults = GameInitLeylineDrawResults.internalBinaryRead(reader, reader.uint32(), options, message.leylineDrawResults);
                    break;
                case /* FullGameFamilyDrawResults familyDrawResults */ 2:
                    message.familyDrawResults = FullGameFamilyDrawResults.internalBinaryRead(reader, reader.uint32(), options, message.familyDrawResults);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GameHostDataPb, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* GameInitLeylineDrawResults leylineDrawResults = 1; */
        if (message.leylineDrawResults)
            GameInitLeylineDrawResults.internalBinaryWrite(message.leylineDrawResults, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* FullGameFamilyDrawResults familyDrawResults = 2; */
        if (message.familyDrawResults)
            FullGameFamilyDrawResults.internalBinaryWrite(message.familyDrawResults, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message GameHostDataPb
 */
export const GameHostDataPb = new GameHostDataPb$Type();
